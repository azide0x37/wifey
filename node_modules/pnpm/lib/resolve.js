var resolveNpm = require('./resolve/npm');
var resolveTarball = require('./resolve/tarball');
var resolveGithub = require('./resolve/github');

/**
 * Resolves a package in the NPM registry. Done as part of `install()`.
 *
 *     var npa = require('npm-package-arg')
 *     resolve(npa('rimraf@2'))
 *       .then((res) => {
 *         res.fullname == 'rimraf@2.5.1'
 *         res.dist == {
 *           shasum: '0a1b2c...'
 *           tarball: 'http://...'
 *         }
 *       })
 */

module.exports = function resolve(pkg, log) {
  if (pkg.type === 'range' || pkg.type === 'version' || pkg.type === 'tag') {
    return resolveNpm(pkg, log);
  } else if (pkg.type === 'remote') {
    return resolveTarball(pkg, log);
  } else if (pkg.type === 'hosted' && pkg.hosted.type === 'github') {
    return resolveGithub(pkg, log);
  } else {
    throw new Error('' + pkg.rawSpec + ': ' + pkg.type + ' packages not supported');
  }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2xpYn4vcmVzb2x2ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFJLGFBQWEsUUFBUSxlQUFSLENBQWpCO0FBQ0EsSUFBSSxpQkFBaUIsUUFBUSxtQkFBUixDQUFyQjtBQUNBLElBQUksZ0JBQWdCLFFBQVEsa0JBQVIsQ0FBcEI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQkEsT0FBTyxPQUFQLEdBQWlCLFNBQVMsT0FBVCxDQUFrQixHQUFsQixFQUF1QixHQUF2QixFQUE0QjtBQUMzQyxNQUFJLElBQUksSUFBSixLQUFhLE9BQWIsSUFBd0IsSUFBSSxJQUFKLEtBQWEsU0FBckMsSUFBa0QsSUFBSSxJQUFKLEtBQWEsS0FBbkUsRUFBMEU7QUFDeEUsV0FBTyxXQUFXLEdBQVgsRUFBZ0IsR0FBaEIsQ0FBUDtBQUNELEdBRkQsTUFFTyxJQUFJLElBQUksSUFBSixLQUFhLFFBQWpCLEVBQTJCO0FBQ2hDLFdBQU8sZUFBZSxHQUFmLEVBQW9CLEdBQXBCLENBQVA7QUFDRCxHQUZNLE1BRUEsSUFBSSxJQUFJLElBQUosS0FBYSxRQUFiLElBQXlCLElBQUksTUFBSixDQUFXLElBQVgsS0FBb0IsUUFBakQsRUFBMkQ7QUFDaEUsV0FBTyxjQUFjLEdBQWQsRUFBbUIsR0FBbkIsQ0FBUDtBQUNELEdBRk0sTUFFQTtBQUNMLFVBQU0sSUFBSSxLQUFKLENBQVUsS0FBSyxJQUFJLE9BQVQsR0FBbUIsSUFBbkIsR0FBMEIsSUFBSSxJQUE5QixHQUFxQyx5QkFBL0MsQ0FBTjtBQUNEO0FBQ0YsQ0FWRCIsImZpbGUiOiJyZXNvbHZlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlc29sdmVOcG0gPSByZXF1aXJlKCcuL3Jlc29sdmUvbnBtJylcbnZhciByZXNvbHZlVGFyYmFsbCA9IHJlcXVpcmUoJy4vcmVzb2x2ZS90YXJiYWxsJylcbnZhciByZXNvbHZlR2l0aHViID0gcmVxdWlyZSgnLi9yZXNvbHZlL2dpdGh1YicpXG5cbi8qKlxuICogUmVzb2x2ZXMgYSBwYWNrYWdlIGluIHRoZSBOUE0gcmVnaXN0cnkuIERvbmUgYXMgcGFydCBvZiBgaW5zdGFsbCgpYC5cbiAqXG4gKiAgICAgdmFyIG5wYSA9IHJlcXVpcmUoJ25wbS1wYWNrYWdlLWFyZycpXG4gKiAgICAgcmVzb2x2ZShucGEoJ3JpbXJhZkAyJykpXG4gKiAgICAgICAudGhlbigocmVzKSA9PiB7XG4gKiAgICAgICAgIHJlcy5mdWxsbmFtZSA9PSAncmltcmFmQDIuNS4xJ1xuICogICAgICAgICByZXMuZGlzdCA9PSB7XG4gKiAgICAgICAgICAgc2hhc3VtOiAnMGExYjJjLi4uJ1xuICogICAgICAgICAgIHRhcmJhbGw6ICdodHRwOi8vLi4uJ1xuICogICAgICAgICB9XG4gKiAgICAgICB9KVxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmVzb2x2ZSAocGtnLCBsb2cpIHtcbiAgaWYgKHBrZy50eXBlID09PSAncmFuZ2UnIHx8IHBrZy50eXBlID09PSAndmVyc2lvbicgfHwgcGtnLnR5cGUgPT09ICd0YWcnKSB7XG4gICAgcmV0dXJuIHJlc29sdmVOcG0ocGtnLCBsb2cpXG4gIH0gZWxzZSBpZiAocGtnLnR5cGUgPT09ICdyZW1vdGUnKSB7XG4gICAgcmV0dXJuIHJlc29sdmVUYXJiYWxsKHBrZywgbG9nKVxuICB9IGVsc2UgaWYgKHBrZy50eXBlID09PSAnaG9zdGVkJyAmJiBwa2cuaG9zdGVkLnR5cGUgPT09ICdnaXRodWInKSB7XG4gICAgcmV0dXJuIHJlc29sdmVHaXRodWIocGtnLCBsb2cpXG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCcnICsgcGtnLnJhd1NwZWMgKyAnOiAnICsgcGtnLnR5cGUgKyAnIHBhY2thZ2VzIG5vdCBzdXBwb3J0ZWQnKVxuICB9XG59XG4iXX0=