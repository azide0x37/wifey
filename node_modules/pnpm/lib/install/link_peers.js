var Promise = require('../promise');
var mkdirp = require('../fs/mkdirp');
var unsymlink = require('../fs/unsymlink');
var relSymlink = require('../fs/rel_symlink');
var join = require('path').join;
var semver = require('semver');

/*
 * Links into `.store/node_modules`
 */

module.exports = function linkPeers(pkg, store, installs) {
  var peers = {};
  var roots = {};

  Object.keys(installs).forEach(function (name) {
    var pkgData = installs[name];
    var realname = pkgData.name;

    if (pkgData.keypath.length === 0) {
      roots[realname] = pkgData;
    } else if (!peers[realname] || semver.gt(pkgData.version, peers[realname].version)) {
      peers[realname] = pkgData;
    }
  });

  var modules = join(store, 'node_modules');
  return mkdirp(modules).then(function (_) {
    return Promise.all(Object.keys(roots).map(function (name) {
      return unsymlink(join(modules, roots[name].name));
    }));
  }).then(function (_) {
    return Promise.all(Object.keys(peers).map(function (name) {
      return unsymlink(join(modules, peers[name].name)).then(function (_) {
        return relSymlink(join(store, peers[name].fullname, '_'), join(modules, peers[name].name));
      });
    }));
  });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYn4vaW5zdGFsbC9saW5rX3BlZXJzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksVUFBVSxRQUFRLFlBQVIsQ0FBZDtBQUNBLElBQUksU0FBUyxRQUFRLGNBQVIsQ0FBYjtBQUNBLElBQUksWUFBWSxRQUFRLGlCQUFSLENBQWhCO0FBQ0EsSUFBSSxhQUFhLFFBQVEsbUJBQVIsQ0FBakI7QUFDQSxJQUFJLE9BQU8sUUFBUSxNQUFSLEVBQWdCLElBQTNCO0FBQ0EsSUFBSSxTQUFTLFFBQVEsUUFBUixDQUFiOzs7Ozs7QUFNQSxPQUFPLE9BQVAsR0FBaUIsU0FBUyxTQUFULENBQW9CLEdBQXBCLEVBQXlCLEtBQXpCLEVBQWdDLFFBQWhDLEVBQTBDO0FBQ3pELE1BQUksUUFBUSxFQUFaO0FBQ0EsTUFBSSxRQUFRLEVBQVo7O0FBRUEsU0FBTyxJQUFQLENBQVksUUFBWixFQUFzQixPQUF0QixDQUE4QixnQkFBUTtBQUNwQyxRQUFJLFVBQVUsU0FBUyxJQUFULENBQWQ7QUFDQSxRQUFJLFdBQVcsUUFBUSxJQUF2Qjs7QUFFQSxRQUFJLFFBQVEsT0FBUixDQUFnQixNQUFoQixLQUEyQixDQUEvQixFQUFrQztBQUNoQyxZQUFNLFFBQU4sSUFBa0IsT0FBbEI7QUFDRCxLQUZELE1BRU8sSUFBSSxDQUFDLE1BQU0sUUFBTixDQUFELElBQ1QsT0FBTyxFQUFQLENBQVUsUUFBUSxPQUFsQixFQUEyQixNQUFNLFFBQU4sRUFBZ0IsT0FBM0MsQ0FESyxFQUNnRDtBQUNyRCxZQUFNLFFBQU4sSUFBa0IsT0FBbEI7QUFDRDtBQUNGLEdBVkQ7O0FBWUEsTUFBSSxVQUFVLEtBQUssS0FBTCxFQUFZLGNBQVosQ0FBZDtBQUNBLFNBQU8sT0FBTyxPQUFQLEVBQ0osSUFESSxDQUNDO0FBQUEsV0FBSyxRQUFRLEdBQVIsQ0FBWSxPQUFPLElBQVAsQ0FBWSxLQUFaLEVBQW1CLEdBQW5CLENBQXVCLGdCQUFRO0FBQ3BELGFBQU8sVUFBVSxLQUFLLE9BQUwsRUFBYyxNQUFNLElBQU4sRUFBWSxJQUExQixDQUFWLENBQVA7QUFDRCxLQUZzQixDQUFaLENBQUw7QUFBQSxHQURELEVBSUosSUFKSSxDQUlDO0FBQUEsV0FBSyxRQUFRLEdBQVIsQ0FBWSxPQUFPLElBQVAsQ0FBWSxLQUFaLEVBQW1CLEdBQW5CLENBQXVCO0FBQUEsYUFDNUMsVUFBVSxLQUFLLE9BQUwsRUFBYyxNQUFNLElBQU4sRUFBWSxJQUExQixDQUFWLEVBQ0MsSUFERCxDQUNNO0FBQUEsZUFDSixXQUNFLEtBQUssS0FBTCxFQUFZLE1BQU0sSUFBTixFQUFZLFFBQXhCLEVBQWtDLEdBQWxDLENBREYsRUFFRSxLQUFLLE9BQUwsRUFBYyxNQUFNLElBQU4sRUFBWSxJQUExQixDQUZGLENBREk7QUFBQSxPQUROLENBRDRDO0FBQUEsS0FBdkIsQ0FBWixDQUFMO0FBQUEsR0FKRCxDQUFQO0FBV0QsQ0E1QkQiLCJmaWxlIjoibGlua19wZWVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBQcm9taXNlID0gcmVxdWlyZSgnLi4vcHJvbWlzZScpXG52YXIgbWtkaXJwID0gcmVxdWlyZSgnLi4vZnMvbWtkaXJwJylcbnZhciB1bnN5bWxpbmsgPSByZXF1aXJlKCcuLi9mcy91bnN5bWxpbmsnKVxudmFyIHJlbFN5bWxpbmsgPSByZXF1aXJlKCcuLi9mcy9yZWxfc3ltbGluaycpXG52YXIgam9pbiA9IHJlcXVpcmUoJ3BhdGgnKS5qb2luXG52YXIgc2VtdmVyID0gcmVxdWlyZSgnc2VtdmVyJylcblxuLypcbiAqIExpbmtzIGludG8gYC5zdG9yZS9ub2RlX21vZHVsZXNgXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBsaW5rUGVlcnMgKHBrZywgc3RvcmUsIGluc3RhbGxzKSB7XG4gIHZhciBwZWVycyA9IHt9XG4gIHZhciByb290cyA9IHt9XG5cbiAgT2JqZWN0LmtleXMoaW5zdGFsbHMpLmZvckVhY2gobmFtZSA9PiB7XG4gICAgdmFyIHBrZ0RhdGEgPSBpbnN0YWxsc1tuYW1lXVxuICAgIHZhciByZWFsbmFtZSA9IHBrZ0RhdGEubmFtZVxuXG4gICAgaWYgKHBrZ0RhdGEua2V5cGF0aC5sZW5ndGggPT09IDApIHtcbiAgICAgIHJvb3RzW3JlYWxuYW1lXSA9IHBrZ0RhdGFcbiAgICB9IGVsc2UgaWYgKCFwZWVyc1tyZWFsbmFtZV0gfHxcbiAgICAgIHNlbXZlci5ndChwa2dEYXRhLnZlcnNpb24sIHBlZXJzW3JlYWxuYW1lXS52ZXJzaW9uKSkge1xuICAgICAgcGVlcnNbcmVhbG5hbWVdID0gcGtnRGF0YVxuICAgIH1cbiAgfSlcblxuICB2YXIgbW9kdWxlcyA9IGpvaW4oc3RvcmUsICdub2RlX21vZHVsZXMnKVxuICByZXR1cm4gbWtkaXJwKG1vZHVsZXMpXG4gICAgLnRoZW4oXyA9PiBQcm9taXNlLmFsbChPYmplY3Qua2V5cyhyb290cykubWFwKG5hbWUgPT4ge1xuICAgICAgcmV0dXJuIHVuc3ltbGluayhqb2luKG1vZHVsZXMsIHJvb3RzW25hbWVdLm5hbWUpKVxuICAgIH0pKSlcbiAgICAudGhlbihfID0+IFByb21pc2UuYWxsKE9iamVjdC5rZXlzKHBlZXJzKS5tYXAobmFtZSA9PlxuICAgICAgdW5zeW1saW5rKGpvaW4obW9kdWxlcywgcGVlcnNbbmFtZV0ubmFtZSkpXG4gICAgICAudGhlbihfID0+XG4gICAgICAgIHJlbFN5bWxpbmsoXG4gICAgICAgICAgam9pbihzdG9yZSwgcGVlcnNbbmFtZV0uZnVsbG5hbWUsICdfJyksXG4gICAgICAgICAgam9pbihtb2R1bGVzLCBwZWVyc1tuYW1lXS5uYW1lKSkpXG4gICAgKSkpXG59XG5cbiJdfQ==