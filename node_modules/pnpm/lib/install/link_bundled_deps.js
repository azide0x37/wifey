var Promise = require('../promise');
var fs = require('mz/fs');
var join = require('path').join;
var linkBins = require('./link_bins');

module.exports = function linkBundledDeps(root) {
  var nodeModules = join(root, 'node_modules');

  return isDir(nodeModules, function (_) {
    return Promise.all(fs.readdirSync(nodeModules).map(function (mod) {
      return isDir(join(nodeModules, mod), function (_) {
        return symlinkBundledDep(nodeModules, join(nodeModules, mod));
      });
    }));
  });
};

function symlinkBundledDep(nodeModules, submod) {
  return linkBins(nodeModules, submod, submod);
}

function isDir(path, fn) {
  return fs.stat(path).then(function (stat) {
    if (!stat.isDirectory()) return Promise.resolve();
    return fn();
  }).catch(function (err) {
    if (err.code !== 'ENOENT') throw err;
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYn4vaW5zdGFsbC9saW5rX2J1bmRsZWRfZGVwcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFJLFVBQVUsUUFBUSxZQUFSLENBQWQ7QUFDQSxJQUFJLEtBQUssUUFBUSxPQUFSLENBQVQ7QUFDQSxJQUFJLE9BQU8sUUFBUSxNQUFSLEVBQWdCLElBQTNCO0FBQ0EsSUFBSSxXQUFXLFFBQVEsYUFBUixDQUFmOztBQUVBLE9BQU8sT0FBUCxHQUFpQixTQUFTLGVBQVQsQ0FBMEIsSUFBMUIsRUFBZ0M7QUFDL0MsTUFBSSxjQUFjLEtBQUssSUFBTCxFQUFXLGNBQVgsQ0FBbEI7O0FBRUEsU0FBTyxNQUFNLFdBQU4sRUFBbUI7QUFBQSxXQUN4QixRQUFRLEdBQVIsQ0FBWSxHQUFHLFdBQUgsQ0FBZSxXQUFmLEVBQTRCLEdBQTVCLENBQWdDO0FBQUEsYUFDMUMsTUFBTSxLQUFLLFdBQUwsRUFBa0IsR0FBbEIsQ0FBTixFQUE4QjtBQUFBLGVBQzVCLGtCQUFrQixXQUFsQixFQUErQixLQUFLLFdBQUwsRUFBa0IsR0FBbEIsQ0FBL0IsQ0FENEI7QUFBQSxPQUE5QixDQUQwQztBQUFBLEtBQWhDLENBQVosQ0FEd0I7QUFBQSxHQUFuQixDQUFQO0FBTUQsQ0FURDs7QUFXQSxTQUFTLGlCQUFULENBQTRCLFdBQTVCLEVBQXlDLE1BQXpDLEVBQWlEO0FBQy9DLFNBQU8sU0FBUyxXQUFULEVBQXNCLE1BQXRCLEVBQThCLE1BQTlCLENBQVA7QUFDRDs7QUFFRCxTQUFTLEtBQVQsQ0FBZ0IsSUFBaEIsRUFBc0IsRUFBdEIsRUFBMEI7QUFDeEIsU0FBTyxHQUFHLElBQUgsQ0FBUSxJQUFSLEVBQ04sSUFETSxDQUNELGdCQUFRO0FBQ1osUUFBSSxDQUFDLEtBQUssV0FBTCxFQUFMLEVBQXlCLE9BQU8sUUFBUSxPQUFSLEVBQVA7QUFDekIsV0FBTyxJQUFQO0FBQ0QsR0FKTSxFQUtOLEtBTE0sQ0FLQSxlQUFPO0FBQUUsUUFBSSxJQUFJLElBQUosS0FBYSxRQUFqQixFQUEyQixNQUFNLEdBQU47QUFBVyxHQUwvQyxDQUFQO0FBTUQiLCJmaWxlIjoibGlua19idW5kbGVkX2RlcHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUHJvbWlzZSA9IHJlcXVpcmUoJy4uL3Byb21pc2UnKVxudmFyIGZzID0gcmVxdWlyZSgnbXovZnMnKVxudmFyIGpvaW4gPSByZXF1aXJlKCdwYXRoJykuam9pblxudmFyIGxpbmtCaW5zID0gcmVxdWlyZSgnLi9saW5rX2JpbnMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGxpbmtCdW5kbGVkRGVwcyAocm9vdCkge1xuICB2YXIgbm9kZU1vZHVsZXMgPSBqb2luKHJvb3QsICdub2RlX21vZHVsZXMnKVxuXG4gIHJldHVybiBpc0Rpcihub2RlTW9kdWxlcywgXyA9PlxuICAgIFByb21pc2UuYWxsKGZzLnJlYWRkaXJTeW5jKG5vZGVNb2R1bGVzKS5tYXAobW9kID0+XG4gICAgICBpc0Rpcihqb2luKG5vZGVNb2R1bGVzLCBtb2QpLCBfID0+XG4gICAgICAgIHN5bWxpbmtCdW5kbGVkRGVwKG5vZGVNb2R1bGVzLCBqb2luKG5vZGVNb2R1bGVzLCBtb2QpKVxuICAgICAgKVxuICAgICkpKVxufVxuXG5mdW5jdGlvbiBzeW1saW5rQnVuZGxlZERlcCAobm9kZU1vZHVsZXMsIHN1Ym1vZCkge1xuICByZXR1cm4gbGlua0JpbnMobm9kZU1vZHVsZXMsIHN1Ym1vZCwgc3VibW9kKVxufVxuXG5mdW5jdGlvbiBpc0RpciAocGF0aCwgZm4pIHtcbiAgcmV0dXJuIGZzLnN0YXQocGF0aClcbiAgLnRoZW4oc3RhdCA9PiB7XG4gICAgaWYgKCFzdGF0LmlzRGlyZWN0b3J5KCkpIHJldHVybiBQcm9taXNlLnJlc29sdmUoKVxuICAgIHJldHVybiBmbigpXG4gIH0pXG4gIC5jYXRjaChlcnIgPT4geyBpZiAoZXJyLmNvZGUgIT09ICdFTk9FTlQnKSB0aHJvdyBlcnIgfSlcbn1cblxuIl19